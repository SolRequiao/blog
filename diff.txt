On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   index.js
	modified:   package.json
	modified:   user/UserController.js
	modified:   views/partials/homenavbar.ejs
	modified:   views/partials/navbar.ejs

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	middlewares/
	views/login.ejs

no changes added to commit (use "git add" and/or "git commit -a")
diff --git a/index.js b/index.js
index 2d7cd73..f2a1fbc 100644
--- a/index.js
+++ b/index.js
@@ -5,6 +5,8 @@ const app = express();
 const port = process.env.PORT;
 const conn = require('./database/database.js');
 const bodyParser = require('body-parser');
+const session = require('express-session');
+const adminAuth = require('./middlewares/adminAuth');
 
 
 //contorller imports
@@ -16,6 +18,13 @@ const usersController = require('./user/UserController.js');
 //Model imports
 const Article = require('./articles/Article.js');
 
+// Sessions
+app.use(session({
+    secret: "sessions-secret",
+    cookie:  {
+        maxAge: 7200000
+    }
+}));
 
 conn.authenticate().then(() => {
     console.log('Database conn OK');
@@ -52,24 +61,24 @@ app.get('/', (req, res) => {
         res.render('index', {
             page_title: 'Home',
             articles: articles,
-            msgFail: null
+            msgFail: null,
         });
     }).catch(error => {
         console.error('Error fetching articles:', error);
         res.render('index', {
             page_title: 'Home',
-            msgFail: 'Articles not avlailable at the moment.'
+            msgFail: 'Articles not avlailable at the moment.',
         });
     });
 });
 
 app.use('/', usersController)
 
-app.use('/', categoriesController);
+app.use('/', moreController);
 
-app.use('/', articlesController);
+app.use('/', adminAuth, categoriesController);
 
-app.use('/', moreController);
+app.use('/', adminAuth, articlesController);
 
 
 app.listen(port, () => {
diff --git a/package.json b/package.json
index 769679b..eb3b55c 100644
--- a/package.json
+++ b/package.json
@@ -15,6 +15,7 @@
     "dotenv": "^17.2.0",
     "ejs": "^3.1.10",
     "express": "^5.1.0",
+    "express-session": "^1.18.2",
     "mysql2": "^3.14.2",
     "sequelize": "^6.37.7",
     "slugify": "^1.6.6"
diff --git a/user/UserController.js b/user/UserController.js
index 1b7f8f3..8ce8ad8 100644
--- a/user/UserController.js
+++ b/user/UserController.js
@@ -2,22 +2,22 @@ const express = require('express');
 const router = express.Router();
 const User = require('./User.js');
 const bcrypt = require('bcryptjs');
+const adminAuth = require('../middlewares/adminAuth')
 
 
-router.get('/admin/users/new', (req, res) => {
+router.get('/admin/users/new', adminAuth, (req, res) => {
     let errors = [];
     if (req.query.state) {
         const { errors: e = [] } = JSON.parse(req.query.state);
-        errors = e
+        errors = e;
     }
     res.render('admin/users/new', {
         page_title: 'New User',
-        msgError: req.query.msgError,
         errors
     });
 });
 
-router.get('/admin/users/:num', (req, res) => {
+router.get('/admin/users/:num', adminAuth, (req, res) => {
     let { num } = req.params || 0;
     let offset = 0;
     if (isNaN(num) || num === 1) {
@@ -42,7 +42,7 @@ router.get('/admin/users/:num', (req, res) => {
 
 
 
-router.post('/user/save', (req, res) => {
+router.post('/user/save', adminAuth, (req, res) => {
     const { userName, email, password, confirmPassword } = req.body;
     const salt = bcrypt.genSaltSync(10)
     const hash = bcrypt.hashSync(password, salt)
@@ -70,4 +70,63 @@ router.post('/user/save', (req, res) => {
     });
 });
 
+router.get('/login', (req, res) => {
+    let errors = [];
+    if (req.query.state) {
+        const { errors: e = [] } = JSON.parse(req.query.state);
+        errors = e;
+    }
+    res.render('login', {
+        page_title: 'Login',
+        errors
+    });
+});
+
+router.post('/authenticate', (req, res) => {
+    const { email, password } = req.body;
+    const fail = (messages, formData = { email }) => {
+        const errors = (Array.isArray(messages) ? messages : [messages]).map(message => ({ message }));
+        const state = encodeURIComponent(JSON.stringify({ errors, formData }));
+        return res.redirect(`/login?state=${state}`);
+    };
+    if (!email || !password) {
+        return fail('Email and password are required');
+    }
+    User.findOne({
+        where: {
+            email: email
+        }
+    }).then(user => {
+        if (!user) {
+            throw new Error('Email does not exist');
+        }
+        const correct = bcrypt.compareSync(password, user.password);
+        if (!correct) {
+            throw new Error('Invalid password');
+        }
+        req.session.user = {
+            id: user.id,
+            email: user.email,
+            username: user.username
+        };
+        return res.redirect('/admin/users/0');
+    }).catch(e => {
+        if (e.name === 'SequelizeValidationError' || e.name === 'SequelizeUniqueConstraintError') {
+            const errors = (e.errors || []).map(x => ({ message: x.message }));
+            const state = encodeURIComponent(JSON.stringify({ errors, formData: { email } }));
+            return res.redirect(`/login?state=${state}`);
+        }
+        if (e instanceof Error && !e.errors) {
+            return fail(e.message);
+        }
+        console.error('Auth error:', e);
+        return res.redirect(`/error?msgError=${encodeURIComponent('Internal authentication error')}`);
+    })
+});
+
+router.get('/logout', (req, res) =>{
+    req.session.user = undefined;
+    res.redirect('/');
+})
+
 module.exports = router;
\ No newline at end of file
diff --git a/views/partials/homenavbar.ejs b/views/partials/homenavbar.ejs
index af5f5cc..9a164fd 100644
--- a/views/partials/homenavbar.ejs
+++ b/views/partials/homenavbar.ejs
@@ -10,7 +10,16 @@
         <li class="nav-item">
           <a class="nav-link" href="/more/articles/0">Articles</a>
         </li>
+        <li class="nav-item">
+          <a class="nav-link" href="/login">Login</a>
+        </li>
+      </ul>
       </ul>
+    <ul class="navbar-nav ms-auto">
+      <li class="nav-item">
+        <a class="nav-link" href="/logout">Logout</a>
+      </li>
+    </ul>
     </div>
   </div>
 </nav>
\ No newline at end of file
diff --git a/views/partials/navbar.ejs b/views/partials/navbar.ejs
index 91df4eb..95c4336 100644
--- a/views/partials/navbar.ejs
+++ b/views/partials/navbar.ejs
@@ -25,6 +25,11 @@
           </ul>
         </li>
       </ul>
+      <ul class="navbar-nav ms-auto">
+      <li class="nav-item">
+        <a class="nav-link" href="/logout">Logout</a>
+      </li>
+    </ul>
     </div>
   </div>
 </nav>
\ No newline at end of file
